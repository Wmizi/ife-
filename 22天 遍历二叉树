<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>ife</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body>
    <script>
    var tree = {
        "id": 0,
        "name": "root",
        "left": {
            "id": 1,
            "name": "Simon",
            "left": {
                "id": 3,
                "name": "Carl",
                "left": {
                    "id": 7,
                    "name": "Lee",
                    "left": {
                        "id": 11,
                        "name": "Fate"
                    }
                },
                "right": {
                    "id": 8,
                    "name": "Annie",
                    "left": {
                        "id": 12,
                        "name": "Saber"
                    }
                }
            },
            "right": {
                "id": 4,
                "name": "Tony",
                "left": {
                    "id": 9,
                    "name": "Candy"
                }
            }
        },
        "right": {
            "id": 2,
            "name": "right",
            "left": {
                "id": 5,
                "name": "Carl",
            },
            "right": {
                "id": 6,
                "name": "Carl",
                "right": {
                    "id": 10,
                    "name": "Kai"
                }        
            }
        }
    }
    
    // 假设id和name均不会重复，根据输入name找到对应的id
    function findIdByName(name) {
        var id;
        function find(obj){
            if(obj != null){
                if(obj.name == name){
                    id = obj.id;
                }
                find(obj.left);
                find(obj.right);

            }
        }
        find(tree);
        return id;
    
    }

    console.log("利用名字查找id：Kai，Saber");
    console.log(findIdByName('Kai'));
    console.log(findIdByName('Saber'));
    
    // 假设id和name均不会重复，根据输入id找到对应的name
    function findNameById(id) {
        var name;
        function find(obj){
            if(obj != null){
                if(obj.id == id){
                    name = obj.name;
                }
                find(obj.left);
                find(obj.right);
            }
        }
        find(tree);
        return name;

    
    }
    console.log("根据id查找姓名：10，12");
    console.log(findNameById(10));
    console.log(findNameById(12));
    
    // 把这个对象中所有的名字以“前序遍历”的方式全部输出到console中
    function getListWithDLR() {
        var arr=[];
        function DLR(obj){
            if(obj){
                arr.push(obj.name);
                DLR(obj.left);
                DLR(obj.right);
            }
        }
        DLR(tree);
        console.log(arr);
           
    }
    console.log("前序遍历");
    getListWithDLR();    
    // 把这个对象中所有的名字以“中序遍历”的方式全部输出到console中
    function getListWithLDR() {
        var arr=[];
        function DLR(obj){
            if(obj){
                DLR(obj.left);
                arr.push(obj.id);
                DLR(obj.right);
            }
        }
        DLR(tree);
        console.log(arr);
    
    }
    console.log("中序遍历")
    getListWithLDR();    
    
    // 把这个对象中所有的名字以“后序遍历”的方式全部输出到console中
    function getListWithLRD() {
        var arr=[];
        function LRD(obj){
            if(obj){
                LRD(obj.left);
                LRD(obj.right);
                arr.push(obj.name);
            }
        }
        LRD(tree);
        console.log(arr);
    
    }
    console.log("后序遍历");
    getListWithLRD();

    </script>
    
</body>
</html>
